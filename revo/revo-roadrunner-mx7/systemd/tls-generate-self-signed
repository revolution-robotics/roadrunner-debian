#!/usr/bin/env bash
#
# Copyright Â© 2021 Revolution Robotics, Inc.
#
# @(#) tls-generate-self-signed
#
# Generate self-signed TLS certificate for current hostname.
#
# If the file `self-signed.conf' already exists in the directory
# $certsdir, then for the purposes of updating that file, it's assumed
# that the section `[alt_names]' exists and is the last.
#
: ${CAT_CMD:='/bin/cat'}
: ${CHOWN_CMD:='/bin/chown'}
: ${CHMOD_CMD:='/bin/chmod'}
: ${CP_CMD:='/bin/cp'}
: ${ED_CMD:='/bin/ed'}
: ${INSTALL_CMD:='/usr/bin/install'}
: ${MKTEMP_CMD:='/bin/mktemp'}
: ${OPENSSL_CMD:='/usr/bin/openssl'}
: ${RM_CMD:='/bin/rm'}

configure-certificate ()
{
    local template=$1

    # If certificate template does not exist or is empty...
    if test ! -s "${certsdir}/self-signed.conf"; then

        # Create default certificate
        $INSTALL_CMD -d -m 0755 "$certsdir"
        $CAT_CMD >"${certsdir}/self-signed.conf" <<EOF
[req]
default_bits = 2048
distinguished_name = req_distinguished_name
x509_extensions = v3_req
utf8 = yes
prompt = no

[req_distinguished_name]
C = US
ST = OR
L = Corvallis
O = Revolution Robotics, Inc.
OU = Web Dispatch
CN = $HOSTNAME

[v3_req]
keyUsage = digitalSignature, keyEncipherment, keyAgreement, keyCertSign, cRLSign
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
IP.1 = 127.0.0.1
DNS.1 = localhost
EOF
        $CP_CMD "${certsdir}/self-signed.conf" "$template"
    else

        # Update only hostname and IPs.
        # Assert: [alt_names] is last section!
        $ED_CMD -s "${certsdir}/self-signed.conf" <<EOF
/^CN/c
CN = $HOSTNAME
.
/^\\[alt_names/+;\$c
IP.1 = 127.0.0.1
DNS.1 = localhost
.
wq $template
EOF

    fi

    declare -i i=2
    declare ip

    # Add alternate names for each IP.
    for ip in $(hostname -I); do
        $CAT_CMD >>"$template" <<EOF
IP.$i = $ip
DNS.$i = ${HOSTNAME}.local
EOF
        (( ++i ))
    done

    echo $template
}

generate-certificate ()
{
    local template=$1
    local certsdir=$2
    local cockpit_tls_certificate=$3

    # Regenerate certificate
    cd "${certsdir}"
    if test -f self-signed.crt; then
        $CP_CMD -a self-signed.crt{,~}
        $CP_CMD -a self-signed.key{,~}
    fi
    $OPENSSL_CMD req -x509 -nodes -newkey rsa:4096 \
                 -keyout self-signed.key -config "$tmpfile" \
                 -out self-signed.crt -days 36500

    # Copy to Cockpit
    {
        $CAT_CMD self-signed.crt
        echo
        $CAT_CMD self-signed.key
        echo
    } >"$cockpit_tls_certificate"
    $CHOWN_CMD root:cockpit-ws "$cockpit_tls_certificate"
    $CHMOD_CMD 640 "$cockpit_tls_certificate"
}

if test ."$0" = ."${BASH_SOURCE[0]}"; then
    declare script_name=${0##*/}

    if (( UID != 0 )); then
       echo "${script_name}: Run as user \`root'."
       exit 1
    fi

    declare certsdir=/etc/web-dispatch/certs
    declare cockpit_tls_certificate=/etc/cockpit/ws-certs.d/0-self-signed.cert

    $INSTALL_CMD -d -m 0755 "$certsdir"

    declare tmpfile=''

    tmpfile=$($MKTEMP_CMD -p "$certsdir" "${script_name}.XXXXX") || exit $?

    trap '$RM_CMD -f "$tmpfile"; exit' 0 1 2 15

    configure-certificate "$tmpfile" || exit $?
    generate-certificate "$tmpfile" "$certsdir" "cockpit_tls_certificate" || exit $?
fi
