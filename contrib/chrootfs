#!/usr/bin/env bash
#
# SYNOPSIS
#     chrootfs fs cmd [arg ...]
#
# DESCRIPTION
#     This script mounts /proc, /sys, /dev and /dev/pts on a given
#     filesystem, FS, then chroots to FS and runs a command, CMD. The
#     mounted filesystems are unmounted on exit.
#
: ${CHROOT:='/usr/sbin/chroot'}
: ${FINDMNT:='/bin/findmnt'}
: ${INSTALL:='/usr/bin/install'}
: ${MKDIR:='/bin/mkdir'}
: ${MOUNT:='/bin/mount'}
: ${UMOUNT:='/bin/umount'}
: ${READLINK:='/bin/readlink'}
: ${SUDO:='/usr/bin/sudo'}

umount-fs ()
{
    local fs_base=$1

    for fs in /proc /sys /dev/pts /dev; do
        if $FINDMNT "${fs_base}${fs}" >/dev/null; then
            $SUDO $UMOUNT -f "${fs_base}${fs}" 2>/dev/null
        fi
    done
}

mount-fs ()
{
    local fs_base=$1

    $SUDO $INSTALL -d -m 0755 -o root -g root "${fs_base}"
    $SUDO $INSTALL -d -m 0555 -o root -g root "${fs_base}"/{dev,proc,sys}
    $SUDO $INSTALL -d -m 0755 -o root -g root "${fs_base}/dev/pts"

    if ! $FINDMNT "${fs_base}/proc" >/dev/null; then
        $SUDO $MOUNT -t proc /proc "${fs_base}/proc"
    fi

    for fs in /sys /dev /dev/pts; do
        if ! $FINDMNT "${fs_base}/${fs}" >/dev/null; then
            $SUDO $MOUNT -o bind "$fs" "${fs_base}${fs}"
        fi
    done
}

if test ."$0" = ."${BASH_SOURCE[0]}"; then
    declare script=$($READLINK -e $0)
    declare script_dir=${script%/*}
    declare fs_base=${1:-"${script_dir}/../rootfs"}

    if test ."$2" = .''; then
        declare cmd=/bin/bash
    fi

    trap 'umount-fs "$fs_base"; exit' 0 1 2 15

    mount-fs "$fs_base"
    $SUDO $CHROOT "$fs_base" ${cmd-"${@:2}"}
fi
